// store/completedTaskSlice.ts

import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Task } from '../components/molecules/taskform'; // Import Task interface

// Define the initial state for completed tasks
interface CompletedTaskState {
  completedTasks: Task[];
}

const initialState: CompletedTaskState = {
  completedTasks: [],
};

// Create a slice for managing completed tasks
const completedTaskSlice = createSlice({
  name: 'completedTasks',
  initialState,
  reducers: {
    // Add a reducer for adding a completed task
    addCompletedTask: (state, action: PayloadAction<Task>) => {
      return {
        ...state,
        completedTasks: (state.completedTasks || []).concat(action.payload)
      };
    },
    
    // Add other reducers as needed (e.g., for updating or deleting completed tasks)
  },
});

// Export action creators generated by createSlice
export const { addCompletedTask } = completedTaskSlice.actions;

// Export the reducer function generated by createSlice
export default completedTaskSlice.reducer;
